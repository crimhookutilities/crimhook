local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\194\126","\75\236\80\204\201"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v93,v30);v30=nil;v122=1;end if (v122==1) then return v123;end end else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=0;local v95;while true do if (v94==0) then v95=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v95-(v95%(1 -0)) ;end end else local v96=0;local v97;while true do if (0==v96) then v97=2^(v44-1) ;return (((v43%(v97 + v97))>=v97) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (4 -2) ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=620 -(555 + 64) ;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or (932 -(857 + 74)) ;if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==(568 -(367 + 201))) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==0) then v63=nil;if  not v61 then local v115=0;while true do if (v115==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end if (v62==3) then return v14(v64);end if (v62==2) then v64={};for v101=1, #v63 do v64[v101]=v10(v9(v11(v63,v101,v101)));end v62=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==2) then for v103=1,v34() do local v104=v32();if (v31(v104,1,1)==(0 -0)) then local v118=v31(v104,2,3);local v119=v31(v104,4,1071 -(68 + 997) );local v120={v33(),v33(),nil,nil};if (v118==0) then local v125=0;while true do if (0==v125) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^16) ;elseif (v118==(1273 -(226 + 1044))) then local v136=0;while true do if (v136==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end if (v31(v119,1,4 -3 )==1) then v120[119 -(32 + 85) ]=v71[v120[2]];end if (v31(v119,2,2)==(1 + 0)) then v120[3]=v71[v120[3]];end if (v31(v119,3,3)==1) then v120[1 + 3 ]=v71[v120[4]];end v66[v103]=v120;end end for v105=1,v34() do v67[v105-1 ]=v39();end return v69;end if (1==v65) then v70=v34();v71={};for v107=1,v70 do local v108=0;local v109;local v110;while true do if (v108==0) then v109=v32();v110=nil;v108=1;end if (v108==1) then if (v109==(878 -(282 + 595))) then v110=v32()~=0 ;elseif (v109==(1639 -(1523 + 114))) then v110=v35();elseif (v109==(3 + 0)) then v110=v36();end v71[v107]=v110;break;end end end v69[3]=v32();v65=2;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v78=v75;local v79=v76;local v80=v77;local v81=v38;local v82=1;local v83= -(958 -(892 + 65));local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v98=0,v86 do if (v98>=v80) then v84[v98-v80 ]=v85[v98 + 1 ];else v88[v98]=v85[v98 + 1 ];end end local v89=(v86-v80) + (2 -1) ;local v90;local v91;while true do local v99=0;while true do if (v99==0) then v90=v78[v82];v91=v90[1];v99=1;end if (v99==1) then if (v91<=37) then if (v91<=18) then if (v91<=(14 -6)) then if (v91<=3) then if (v91<=1) then if (v91==0) then v88[v90[2]]=v88[v90[3]]%v88[v90[4]] ;else local v140=v90[2];v88[v140](v88[v140 + 1 ]);end elseif (v91==2) then v88[v90[2]]=v73[v90[3]];else v88[v90[3 -1 ]]=v88[v90[3]];end elseif (v91<=(355 -(87 + 263))) then if (v91==(184 -(67 + 113))) then v88[v90[2]]=v88[v90[3]]%v88[v90[3 + 1 ]] ;elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=6) then v88[v90[4 -2 ]]=v88[v90[3]][v90[4]];elseif (v91==7) then local v244=v79[v90[3 + 0 ]];local v245;local v246={};v245=v18({},{[v7("\180\77\72\121\129\251\107","\143\235\18\33\23\229\158\19")]=function(v294,v295) local v296=v246[v295];return v296[1][v296[2]];end,[v7("\133\254\213\229\243\120\114\84\191\217","\48\218\161\187\128\132\17\28")]=function(v297,v298,v299) local v300=0;local v301;while true do if (v300==0) then v301=v246[v298];v301[1][v301[2]]=v299;break;end end end});for v302=1,v90[15 -11 ] do local v303=0;local v304;while true do if (v303==1) then if (v304[1]==3) then v246[v302-1 ]={v88,v304[5 -2 ]};else v246[v302-(1 + 0) ]={v73,v304[3]};end v87[ #v87 + 1 ]=v246;break;end if (0==v303) then v82=v82 + (953 -(802 + 150)) ;v304=v78[v82];v303=1;end end end v88[v90[2]]=v40(v244,v245,v74);else local v248=v90[2];v88[v248]=v88[v248](v21(v88,v248 + 1 ,v83));end elseif (v91<=13) then if (v91<=(28 -18)) then if (v91>(6 + 3)) then local v148=v90[2 -0 ];local v149={};for v231=1, #v87 do local v232=0;local v233;while true do if (v232==0) then v233=v87[v231];for v358=0, #v233 do local v359=0;local v360;local v361;local v362;while true do if (v359==0) then v360=v233[v358];v361=v360[1];v359=1;end if (v359==1) then v362=v360[2];if ((v361==v88) and (v362>=v148)) then v149[v362]=v361[v362];v360[1]=v149;end break;end end end break;end end end else v88[v90[2]]=v88[v90[3]]%v90[4] ;end elseif (v91<=11) then v88[v90[2]]= #v88[v90[3]];elseif (v91==12) then v88[v90[2]]=v90[3]~=0 ;else local v251=v90[2];do return v21(v88,v251,v83);end end elseif (v91<=15) then if (v91>14) then do return;end else v88[v90[2]]=v88[v90[3]];end elseif (v91<=16) then if v88[v90[1189 -(1069 + 118) ]] then v82=v82 + 1 ;else v82=v90[6 -3 ];end elseif (v91>17) then local v253=v90[2];do return v88[v253](v21(v88,v253 + 1 ,v90[3]));end else v88[v90[2]]=v90[3];end elseif (v91<=27) then if (v91<=22) then if (v91<=20) then if (v91==(41 -22)) then local v154=0;local v155;while true do if (v154==0) then v155=v90[1 + 1 ];v88[v155](v21(v88,v155 + 1 ,v83));break;end end else v82=v90[3];end elseif (v91>21) then local v157=0;local v158;while true do if (v157==0) then v158=v90[2];do return v88[v158](v21(v88,v158 + 1 ,v90[3]));end break;end end else local v159=v90[2];local v160=v88[v159 + 2 ];local v161=v88[v159] + v160 ;v88[v159]=v161;if (v160>0) then if (v161<=v88[v159 + 1 ]) then local v334=0;while true do if (v334==0) then v82=v90[3];v88[v159 + 3 ]=v161;break;end end end elseif (v161>=v88[v159 + 1 ]) then local v335=0;while true do if (v335==0) then v82=v90[3];v88[v159 + (4 -1) ]=v161;break;end end end end elseif (v91<=24) then if (v91==23) then v88[v90[2]]={};else local v164=0;local v165;while true do if (0==v164) then v165=v90[2];v88[v165]=v88[v165](v21(v88,v165 + 1 ,v90[3]));break;end end end elseif (v91<=25) then v88[v90[2]]=v74[v90[3]];elseif (v91>26) then v88[v90[2]]=v88[v90[3]] + v90[4] ;else do return;end end elseif (v91<=32) then if (v91<=29) then if (v91>28) then v88[v90[2 + 0 ]][v88[v90[3]]]=v90[4];else v88[v90[793 -(368 + 423) ]]=v90[3]~=0 ;end elseif (v91<=30) then local v171=v90[2];v88[v171]=v88[v171]();elseif (v91>31) then v88[v90[2]][v88[v90[3]]]=v90[4];else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91<=34) then if (v91>33) then v88[v90[2]]=v90[3] + v88[v90[4]] ;else do return v88[v90[2]]();end end elseif (v91<=35) then local v174=0;local v175;local v176;while true do if (1==v174) then for v336=v175 + 1 ,v83 do v15(v176,v88[v336]);end break;end if (0==v174) then v175=v90[2];v176=v88[v175];v174=1;end end elseif (v91>36) then v88[v90[2]]= #v88[v90[9 -6 ]];else v88[v90[2]]=v88[v90[3]][v90[22 -(10 + 8) ]];end elseif (v91<=56) then if (v91<=46) then if (v91<=41) then if (v91<=(149 -110)) then if (v91>38) then v88[v90[2]]={};else v88[v90[2]]();end elseif (v91>40) then v88[v90[2]]=v74[v90[3]];else local v180=0;local v181;local v182;local v183;while true do if (v180==0) then v181=v90[444 -(416 + 26) ];v182=v88[v181];v180=1;end if (v180==1) then v183=v88[v181 + 2 ];if (v183>0) then if (v182>v88[v181 + 1 ]) then v82=v90[3];else v88[v181 + 3 ]=v182;end elseif (v182<v88[v181 + 1 ]) then v82=v90[3];else v88[v181 + 3 ]=v182;end break;end end end elseif (v91<=43) then if (v91>42) then local v184=0;local v185;local v186;local v187;while true do if (v184==2) then for v337=1,v90[4] do local v338=0;local v339;while true do if (v338==0) then v82=v82 + 1 ;v339=v78[v82];v338=1;end if (v338==1) then if (v339[1]==3) then v187[v337-1 ]={v88,v339[3]};else v187[v337-1 ]={v73,v339[3]};end v87[ #v87 + 1 ]=v187;break;end end end v88[v90[2]]=v40(v185,v186,v74);break;end if (0==v184) then v185=v79[v90[3]];v186=nil;v184=1;end if (v184==1) then v187={};v186=v18({},{[v7("\112\58\84\213\75\0\69","\187\47\101\61")]=function(v340,v341) local v342=0;local v343;while true do if (v342==0) then v343=v187[v341];return v343[1][v343[6 -4 ]];end end end,[v7("\57\5\176\12\37\15\52\186\12\42","\82\102\90\222\105")]=function(v344,v345,v346) local v347=0;local v348;while true do if (v347==0) then v348=v187[v345];v348[1][v348[2]]=v346;break;end end end});v184=2;end end else local v188=0;local v189;local v190;local v191;local v192;while true do if (0==v188) then v189=v90[2];v190,v191=v81(v88[v189](v88[v189 + 1 ]));v188=1;end if (2==v188) then for v349=v189,v83 do v192=v192 + 1 ;v88[v349]=v190[v192];end break;end if (v188==1) then v83=(v191 + v189) -(1 + 0) ;v192=0;v188=2;end end end elseif (v91<=44) then local v193=0;local v194;local v195;while true do if (v193==0) then v194=v90[2];v195={};v193=1;end if (v193==1) then for v352=1, #v87 do local v353=v87[v352];for v363=0, #v353 do local v364=0;local v365;local v366;local v367;while true do if (v364==1) then v367=v365[2];if ((v366==v88) and (v367>=v194)) then local v422=0;while true do if (v422==0) then v195[v367]=v366[v367];v365[1 -0 ]=v195;break;end end end break;end if (v364==0) then v365=v353[v363];v366=v365[1];v364=1;end end end end break;end end elseif (v91==45) then v88[v90[2]]();else local v264=0;local v265;local v266;local v267;local v268;while true do if (v264==1) then v83=(v267 + v265) -1 ;v268=0;v264=2;end if (v264==0) then v265=v90[2];v266,v267=v81(v88[v265](v21(v88,v265 + 1 ,v83)));v264=1;end if (v264==2) then for v377=v265,v83 do local v378=0;while true do if (v378==0) then v268=v268 + 1 ;v88[v377]=v266[v268];break;end end end break;end end end elseif (v91<=51) then if (v91<=48) then if (v91>47) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v196=0;local v197;while true do if (v196==0) then v197=v90[2];v88[v197](v21(v88,v197 + 1 ,v83));break;end end end elseif (v91<=49) then do return v88[v90[2]]();end elseif (v91==50) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[441 -(145 + 293) ];end else local v270=0;local v271;local v272;local v273;local v274;while true do if (v270==2) then for v379=v271,v83 do local v380=0;while true do if (v380==0) then v274=v274 + 1 ;v88[v379]=v272[v274];break;end end end break;end if (v270==1) then v83=(v273 + v271) -1 ;v274=0;v270=2;end if (v270==0) then v271=v90[432 -(44 + 386) ];v272,v273=v81(v88[v271](v21(v88,v271 + 1 ,v90[1489 -(998 + 488) ])));v270=1;end end end elseif (v91<=(17 + 36)) then if (v91==52) then v88[v90[2]]=v73[v90[3]];else v88[v90[2]][v88[v90[3]]]=v88[v90[4]];end elseif (v91<=54) then local v202=v90[2];local v203,v204=v81(v88[v202](v21(v88,v202 + 1 ,v83)));v83=(v204 + v202) -1 ;local v205=0;for v234=v202,v83 do v205=v205 + 1 + 0 ;v88[v234]=v203[v205];end elseif (v91>55) then local v275=0;local v276;while true do if (v275==0) then v276=v90[2];v88[v276](v88[v276 + 1 ]);break;end end else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=65) then if (v91<=60) then if (v91<=(830 -(201 + 571))) then if (v91>(1195 -(116 + 1022))) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else for v237=v90[2],v90[12 -9 ] do v88[v237]=nil;end end elseif (v91==59) then local v206=v90[2];local v207,v208=v81(v88[v206](v21(v88,v206 + 1 ,v90[3])));v83=(v208 + v206) -1 ;local v209=0;for v239=v206,v83 do local v240=0;while true do if (v240==0) then v209=v209 + 1 ;v88[v239]=v207[v209];break;end end end else local v210=0;local v211;local v212;while true do if (v210==0) then v211=v90[2];v212=v88[v211];v210=1;end if (v210==1) then for v357=v211 + 1 ,v83 do v15(v212,v88[v357]);end break;end end end elseif (v91<=62) then if (v91>61) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[3];end else local v213=0;local v214;while true do if (0==v213) then v214=v90[2 + 0 ];v88[v214]=v88[v214]();break;end end end elseif (v91<=63) then local v215=0;local v216;local v217;while true do if (v215==0) then v216=v90[2];v217=v88[v90[3]];v215=1;end if (v215==1) then v88[v216 + 1 ]=v217;v88[v216]=v217[v90[4]];break;end end elseif (v91==64) then v88[v90[2]]=v90[3] + v88[v90[14 -10 ]] ;else local v281=v90[2];local v282=v88[v281 + 2 ];local v283=v88[v281] + v282 ;v88[v281]=v283;if (v282>0) then if (v283<=v88[v281 + 1 ]) then v82=v90[3];v88[v281 + 3 ]=v283;end elseif (v283>=v88[v281 + 1 ]) then local v383=0;while true do if (v383==0) then v82=v90[3];v88[v281 + 3 ]=v283;break;end end end end elseif (v91<=70) then if (v91<=67) then if (v91==66) then v88[v90[2]]=v88[v90[3]]%v90[4] ;else local v219=v90[2];v88[v219]=v88[v219](v21(v88,v219 + (3 -2) ,v90[3]));end elseif (v91<=68) then for v241=v90[861 -(814 + 45) ],v90[3] do v88[v241]=nil;end elseif (v91>69) then local v285=0;local v286;while true do if (0==v285) then v286=v90[2];v88[v286]=v88[v286](v21(v88,v286 + 1 ,v83));break;end end else local v287=v90[2];do return v21(v88,v287,v83);end end elseif (v91<=72) then if (v91==71) then local v221=0;local v222;local v223;local v224;while true do if (v221==1) then v224=v88[v222 + (4 -2) ];if (v224>0) then if (v223>v88[v222 + 1 ]) then v82=v90[3];else v88[v222 + 3 ]=v223;end elseif (v223<v88[v222 + 1 ]) then v82=v90[1 + 2 ];else v88[v222 + 3 ]=v223;end break;end if (v221==0) then v222=v90[2];v223=v88[v222];v221=1;end end else local v225=v90[2];local v226=v88[v90[3]];v88[v225 + 1 ]=v226;v88[v225]=v226[v90[4]];end elseif (v91<=73) then v82=v90[3];elseif (v91>74) then v88[v90[2]]=v90[3];else local v290=v90[2];local v291,v292=v81(v88[v290](v88[v290 + 1 ]));v83=(v292 + v290) -(1 + 0) ;local v293=0;for v331=v290,v83 do local v332=0;while true do if (v332==0) then v293=v293 + 1 ;v88[v331]=v291[v293];break;end end end end v82=v82 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
--[[
  ██████╗██████╗ ██╗███╗   ███╗██╗  ██╗ ██████╗  ██████╗ ██╗  ██╗
██╔════╝██╔══██╗██║████╗ ████║██║  ██║██╔═══██╗██╔═══██╗██║ ██╔╝
██║     ██████╔╝██║██╔████╔██║███████║██║   ██║██║   ██║█████╔╝ 
██║     ██╔══██╗██║██║╚██╔╝██║██╔══██║██║   ██║██║   ██║██╔═██╗ 
╚██████╗██║  ██║██║██║ ╚═╝ ██║██║  ██║╚██████╔╝╚██████╔╝██║  ██╗
 ╚═════╝╚═╝  ╚═╝╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝
                                                                
          \_Created by @Rayparams on Discord. Loader Version: 0.0.1 BETA.
          \_This loader has been protected by Anti-Skid v.1.2.6.
]]--
